      MODULE NMPRD4P
      USE SIZES, ONLY: DPSIZE
      USE NMPRD4,ONLY: VRBL
      IMPLICIT NONE
      SAVE
      REAL(KIND=DPSIZE), DIMENSION (:),POINTER ::COM
      REAL(KIND=DPSIZE), POINTER ::MU_1,MU_2,MU_3,CL,V,KA,S2,F1,TVCL
      REAL(KIND=DPSIZE), POINTER ::TVV,TVKA,IPRED,Y,A000032,A000034
      REAL(KIND=DPSIZE), POINTER ::A000036,A000038,A000040,A000042
      REAL(KIND=DPSIZE), POINTER ::A000043,A000044,D000001,D000002
      REAL(KIND=DPSIZE), POINTER ::D000003,D000004,D000005,D000006
      REAL(KIND=DPSIZE), POINTER ::D000007,D000008,D000009,D000053
      REAL(KIND=DPSIZE), POINTER ::D000064,D000063,D000062,D000054
      REAL(KIND=DPSIZE), POINTER ::D000073,D000074,D000051,D000057
      REAL(KIND=DPSIZE), POINTER ::D000078,D000082,D000083,D000084
      REAL(KIND=DPSIZE), POINTER ::D000077,D000081,D000080,D000079
      REAL(KIND=DPSIZE), POINTER ::D000085,C000032,D000087,D000086
      REAL(KIND=DPSIZE), POINTER ::D000088,C000033
      CONTAINS
      SUBROUTINE ASSOCNMPRD4
      COM=>VRBL
      MU_1=>COM(000001);MU_2=>COM(000002);MU_3=>COM(000003)
      CL=>COM(000004);V=>COM(000005);KA=>COM(000006);S2=>COM(000007)
      F1=>COM(000008);TVCL=>COM(000009);TVV=>COM(000010)
      TVKA=>COM(000011);IPRED=>COM(000012);Y=>COM(000013)
      A000032=>COM(000014);A000034=>COM(000015);A000036=>COM(000016)
      A000038=>COM(000017);A000040=>COM(000018);A000042=>COM(000019)
      A000043=>COM(000020);A000044=>COM(000021);D000001=>COM(000022)
      D000002=>COM(000023);D000003=>COM(000024);D000004=>COM(000025)
      D000005=>COM(000026);D000006=>COM(000027);D000007=>COM(000028)
      D000008=>COM(000029);D000009=>COM(000030);D000053=>COM(000031)
      D000064=>COM(000032);D000063=>COM(000033);D000062=>COM(000034)
      D000054=>COM(000035);D000073=>COM(000036);D000074=>COM(000037)
      D000051=>COM(000038);D000057=>COM(000039);D000078=>COM(000040)
      D000082=>COM(000041);D000083=>COM(000042);D000084=>COM(000043)
      D000077=>COM(000044);D000081=>COM(000045);D000080=>COM(000046)
      D000079=>COM(000047);D000085=>COM(000048);C000032=>COM(000049)
      D000087=>COM(000050);D000086=>COM(000051);D000088=>COM(000052)
      C000033=>COM(000053)
      END SUBROUTINE ASSOCNMPRD4
      END MODULE NMPRD4P
      SUBROUTINE PK(ICALL,IDEF,THETA,IREV,EVTREC,NVNT,INDXS,IRGG,GG,NETAS)      
      USE NMPRD4P
      USE SIZES,     ONLY: DPSIZE,ISIZE
      USE PRDIMS,    ONLY: GPRD,HPRD,GERD,HERD,GPKD
      USE NMBAYES_REAL,    ONLY: PRIORINFO
      USE NMBAYES_REAL, ONLY: ADDL_ACTUAL,ADDL_TIMEDIFF,ADDL_TIME
      USE NMPRD_REAL,ONLY: ETA,EPS                                            
      USE NMPRD_INT, ONLY: MSEC=>ISECDER,MFIRST=>IFRSTDER,COMACT,COMSAV,IFIRSTEM
      USE NMPRD_INT, ONLY: MDVRES,ETASXI,NPDE_MODE,NOFIRSTDERCODE
      USE NMPRD_REAL, ONLY: DV_LOQ,CDF_L,DV_LAQ,CDF_LA
      USE NMPRD_INT, ONLY: IQUIT
      USE PROCM_INT, ONLY: NEWIND=>PNEWIF                                       
      USE NMBAYES_REAL, ONLY: LDF                                             
      IMPLICIT REAL(KIND=DPSIZE) (A-Z)                                          
      REAL(KIND=DPSIZE) :: EVTREC                                               
      SAVE
      INTEGER(KIND=ISIZE) :: FIRSTEM
      INTEGER(KIND=ISIZE) :: ICALL,IDEF,IREV,NVNT,INDXS,IRGG,NETAS              
      DIMENSION :: IDEF(7,*),THETA(*),EVTREC(IREV,*),INDXS(*),GG(IRGG,GPKD+1,*) 
      FIRSTEM=IFIRSTEM
      IF (ICALL <= 1) THEN                                                      
      CALL ASSOCNMPRD4
      IDEF(   1,0001)=  -9
      IDEF(   1,0002)=  -1
      IDEF(   1,0003)=   0
      IDEF(   1,0004)=   0
      IDEF(   2,0003)=   0
      IDEF(   2,0004)=   0
      IDEF(   3,0002)=   4
      IDEF(   4,0001)=   5
      CALL GETETA(ETA)                                                          
      IF (IQUIT == 1) RETURN                                                    
      RETURN                                                                    
      ENDIF                                                                     
      IF (NEWIND /= 2) THEN
      IF (ICALL == 4) THEN
      CALL SIMETA(ETA)
      ELSE
      CALL GETETA(ETA)
      ENDIF
      IF (IQUIT == 1) RETURN
      ENDIF
 !  level            0
      MU_1=DLOG(THETA(001)) 
      MU_2=DLOG(THETA(002)) 
      MU_3=DLOG(THETA(003)) 
      B000001=DEXP(ETA(001)) 
      CL=THETA(001)*B000001 
      B000002=DEXP(ETA(002)) 
      V=THETA(002)*B000002 
      B000003=DEXP(ETA(003)) 
      KA=THETA(003)*B000003 
      S2=V 
      F1=1.D0 
      TVCL=THETA(001) 
      TVV=THETA(002) 
      TVKA=THETA(003) 
      IF (FIRSTEM == 1) THEN
!                      A000032 = DERIVATIVE OF CL W.R.T. ETA(001)
      A000032=THETA(001)*B000001 
!                      A000036 = DERIVATIVE OF V W.R.T. ETA(002)
      A000036=THETA(002)*B000002 
!                      A000040 = DERIVATIVE OF KA W.R.T. ETA(003)
      A000040=THETA(003)*B000003 
!                      A000043 = DERIVATIVE OF S2 W.R.T. ETA(002)
      A000043=A000036 
      GG(0001,1,1)=CL
      GG(0001,0002,1)=A000032
      GG(0002,1,1)=V
      GG(0002,0003,1)=A000036
      GG(0003,1,1)=KA
      GG(0003,0004,1)=A000040
      GG(0005,1,1)=F1
      GG(0004,1,1)=S2
      GG(0004,0003,1)=A000043
      ELSE
      GG(0001,1,1)=CL
      GG(0002,1,1)=V
      GG(0003,1,1)=KA
      GG(0005,1,1)=F1
      GG(0004,1,1)=S2
      ENDIF
      IF (MSEC == 1) THEN
!                      A000034 = DERIVATIVE OF A000032 W.R.T. ETA(001)
      A000034=THETA(001)*B000001 
!                      A000038 = DERIVATIVE OF A000036 W.R.T. ETA(002)
      A000038=THETA(002)*B000002 
!                      A000042 = DERIVATIVE OF A000040 W.R.T. ETA(003)
      A000042=THETA(003)*B000003 
!                      A000044 = DERIVATIVE OF A000043 W.R.T. ETA(002)
      A000044=A000038 
      GG(0001,0002,0002)=A000034
      GG(0002,0003,0003)=A000038
      GG(0003,0004,0004)=A000042
      GG(0004,0003,0003)=A000044
      ENDIF
      RETURN
      END
      SUBROUTINE ERROR (ICALL,IDEF,THETA,IREV,EVTREC,NVNT,INDXS,F,G,HH)       
      USE NMPRD4P
      USE SIZES,     ONLY: DPSIZE,ISIZE
      USE PRDIMS,    ONLY: GPRD,HPRD,GERD,HERD,GPKD
      USE NMPRD_REAL,ONLY: ETA,EPS                                            
      USE NMPRD_INT, ONLY: MSEC=>ISECDER,MFIRST=>IFRSTDER,IQUIT,IFIRSTEM
      USE NMPRD_INT, ONLY: MDVRES,ETASXI,NPDE_MODE,NOFIRSTDERCODE
      USE NMPRD_REAL, ONLY: DV_LOQ,CDF_L,DV_LAQ,CDF_LA
      USE NMBAYES_REAL, ONLY: ADDL_ACTUAL,ADDL_TIMEDIFF,ADDL_TIME
      USE NMPRD_INT, ONLY: NEWL2
      USE PROCM_INT, ONLY: NEWIND=>PNEWIF                                       
      USE PROCM_REAL,ONLY: TSTATE
      USE PROCM_REAL,ONLY: A=>AMNT,DAETA,D2AETA
      IMPLICIT REAL(KIND=DPSIZE) (A-Z)                                        
      REAL(KIND=DPSIZE) :: EVTREC                                             
      SAVE
      INTEGER(KIND=ISIZE) :: ICALL,IDEF,IREV,NVNT,INDXS                       
      DIMENSION :: IDEF(*),THETA(*),EVTREC(IREV,*),INDXS(*)                   
      REAL(KIND=DPSIZE) :: G(GERD,*),HH(HERD,*)                               
      INTEGER(KIND=ISIZE) :: FIRSTEM
      FIRSTEM=IFIRSTEM
      IF (ICALL <= 1) THEN                                                    
      CALL ASSOCNMPRD4
      IDEF(2)=-1
      IDEF(3)=001
      RETURN
      ENDIF
      IF (ICALL == 4) THEN
      IF (NEWL2 == 1) THEN
      CALL SIMEPS(EPS)
      IF (IQUIT == 1) RETURN
      ENDIF
      ENDIF
 !  level            0
      IPRED=A(2)/V 
      B000008=1.D0+EPS(001) 
      Y=IPRED*B000008+EPS(002) 
!                      C000032 = DERIVATIVE OF Y W.R.T. EPS(001)
      C000032=IPRED 
!                      C000033 = DERIVATIVE OF Y W.R.T. EPS(002)
      C000033=1.D0 
      IF (FIRSTEM == 1) THEN !1
      B000001=1.D0/V 
!                      D000051 = DERIVATIVE OF IPRED W.R.T. ETA(003)
      D000051=B000001*DAETA(002,003) 
!                      D000052 = DERIVATIVE OF IPRED W.R.T. ETA(002)
      D000052=B000001*DAETA(002,002) 
!                      D000053 = DERIVATIVE OF IPRED W.R.T. ETA(001)
      D000053=B000001*DAETA(002,001) 
      B000002=-A(2)/V/V 
!                      D000054 = DERIVATIVE OF IPRED W.R.T. ETA(002)
      D000054=B000002*A000036+D000052 
!                      D000077 = DERIVATIVE OF Y W.R.T. ETA(002)
      D000077=B000008*D000054 
!                      D000078 = DERIVATIVE OF Y W.R.T. ETA(001)
      D000078=B000008*D000053 
!                      D000079 = DERIVATIVE OF Y W.R.T. ETA(003)
      D000079=B000008*D000051 
!                      D000086 = DERIVATIVE OF C000032 W.R.T. ETA(002)
      D000086=D000054 
!                      D000087 = DERIVATIVE OF C000032 W.R.T. ETA(001)
      D000087=D000053 
!                      D000088 = DERIVATIVE OF C000032 W.R.T. ETA(003)
      D000088=D000051 
      G(001,1)=D000078
      G(002,1)=D000077
      G(003,1)=D000079
      ENDIF !1
      HH(001,1)=C000032
      HH(002,1)=C000033
      IF (FIRSTEM == 1) THEN !2
      HH(001,002)=D000087
      HH(001,003)=D000086
      HH(001,004)=D000088
      ENDIF !2
      IF (MSEC == 1) THEN
      B000004=-1.D0/V/V 
!                      D000056 = DERIVATIVE OF B000001 W.R.T. ETA(002)
      D000056=B000004*A000036 
!                      D000057 = DERIVATIVE OF D000051 W.R.T. ETA(003)
      D000057=B000001*D2AETA(002,003,003) 
!                      D000058 = DERIVATIVE OF D000052 W.R.T. ETA(002)
      D000058=DAETA(002,002)*D000056 
!                      D000059 = DERIVATIVE OF D000052 W.R.T. ETA(003)
      D000059=B000001*D2AETA(002,003,002) 
!                      D000060 = DERIVATIVE OF D000052 W.R.T. ETA(002)
      D000060=B000001*D2AETA(002,002,002)+D000058 
!                      D000061 = DERIVATIVE OF D000053 W.R.T. ETA(002)
      D000061=DAETA(002,001)*D000056 
!                      D000062 = DERIVATIVE OF D000053 W.R.T. ETA(003)
      D000062=B000001*D2AETA(002,003,001) 
!                      D000063 = DERIVATIVE OF D000053 W.R.T. ETA(002)
      D000063=B000001*D2AETA(002,002,001)+D000061 
!                      D000064 = DERIVATIVE OF D000053 W.R.T. ETA(001)
      D000064=B000001*D2AETA(002,001,001) 
      B000005=-1.D0/V/V 
!                      D000065 = DERIVATIVE OF B000002 W.R.T. ETA(003)
      D000065=B000005*DAETA(002,003) 
!                      D000066 = DERIVATIVE OF B000002 W.R.T. ETA(002)
      D000066=B000005*DAETA(002,002) 
!                      D000067 = DERIVATIVE OF B000002 W.R.T. ETA(001)
      D000067=B000005*DAETA(002,001) 
      B000006=A(2)/V/V/V 
!                      D000068 = DERIVATIVE OF B000002 W.R.T. ETA(002)
      D000068=B000006*A000036+D000066 
      B000007=A(2)/V/V/V 
!                      D000069 = DERIVATIVE OF B000002 W.R.T. ETA(002)
      D000069=B000007*A000036+D000068 
!                      D000070 = DERIVATIVE OF D000054 W.R.T. ETA(002)
      D000070=A000036*D000069 
!                      D000071 = DERIVATIVE OF D000054 W.R.T. ETA(003)
      D000071=A000036*D000065 
!                      D000072 = DERIVATIVE OF D000054 W.R.T. ETA(002)
      D000072=B000002*A000038+D000070 
!                      D000073 = DERIVATIVE OF D000054 W.R.T. ETA(002)
      D000073=D000060+D000072 
!                      D000074 = DERIVATIVE OF D000054 W.R.T. ETA(003)
      D000074=D000059+D000071 
!                      D000080 = DERIVATIVE OF D000077 W.R.T. ETA(003)
      D000080=B000008*D000074 
!                      D000081 = DERIVATIVE OF D000077 W.R.T. ETA(002)
      D000081=B000008*D000073 
!                      D000082 = DERIVATIVE OF D000078 W.R.T. ETA(001)
      D000082=B000008*D000064 
!                      D000083 = DERIVATIVE OF D000078 W.R.T. ETA(002)
      D000083=B000008*D000063 
!                      D000084 = DERIVATIVE OF D000078 W.R.T. ETA(003)
      D000084=B000008*D000062 
!                      D000085 = DERIVATIVE OF D000079 W.R.T. ETA(003)
      D000085=B000008*D000057 
      G(001,002)=D000082
      G(002,002)=D000083
      G(002,003)=D000081
      G(003,002)=D000084
      G(003,003)=D000080
      G(003,004)=D000085
      ENDIF
      F=Y
      RETURN
      END
      SUBROUTINE PRIOR (ICALL,CNT)
      USE SIZES,     ONLY: DPSIZE,ISIZE
      USE PRDIMS,    ONLY: GPRD,HPRD,GERD,HERD,GPKD
      USE NMPRD_INT, ONLY: NPROB,IPROB,IDXSUP,NITR_SUP,NITSUP,UST
      USE ROCM_INT,  ONLY: NREP,IREP=>NCREP
      USE NMPR_INT,  ONLY: ICMAX=>IMAXSIM
      REAL(KIND=DPSIZE) :: CNT
      REAL(KIND=DPSIZE) :: PLEV
      INTEGER(KIND=ISIZE) :: ICALL
      PLEV=0.99
      ITYP=0
      NSAM=0
      ISS=0
      NTHETA=000003
      NETA=000003
      NEPS=000002
      NTHP=000003
      NETP=0
      NEPP=0
      NPEXP=0
      CALL NWPRI(NTHETA,NETA,NEPS,NTHP,NETP,NEPP,NPEXP,ITYP,PLEV, &
                  NSAM,ISS,CNT)
      RETURN
      END
      SUBROUTINE FSIZESR(NAME_FSIZES,F_SIZES)
      USE SIZES, ONLY: ISIZE
      INTEGER(KIND=ISIZE), DIMENSION(*) :: F_SIZES
      CHARACTER(LEN=*),    DIMENSION(*) :: NAME_FSIZES
      NAME_FSIZES(01)='LTH'; F_SIZES(01)=6
      NAME_FSIZES(02)='LVR'; F_SIZES(02)=8
      NAME_FSIZES(03)='LVR2'; F_SIZES(03)=0
      NAME_FSIZES(04)='LPAR'; F_SIZES(04)=12
      NAME_FSIZES(05)='LPAR3'; F_SIZES(05)=0
      NAME_FSIZES(06)='NO'; F_SIZES(06)=0
      NAME_FSIZES(07)='MMX'; F_SIZES(07)=1
      NAME_FSIZES(08)='LNP4'; F_SIZES(08)=0
      NAME_FSIZES(09)='LSUPP'; F_SIZES(09)=1
      NAME_FSIZES(10)='LIM7'; F_SIZES(10)=0
      NAME_FSIZES(11)='LWS3'; F_SIZES(11)=0
      NAME_FSIZES(12)='MAXIDS'; F_SIZES(12)=1
      NAME_FSIZES(13)='LIM1'; F_SIZES(13)=0
      NAME_FSIZES(14)='LIM2'; F_SIZES(14)=0
      NAME_FSIZES(15)='LIM3'; F_SIZES(15)=0
      NAME_FSIZES(16)='LIM4'; F_SIZES(16)=0
      NAME_FSIZES(17)='LIM5'; F_SIZES(17)=0
      NAME_FSIZES(18)='LIM6'; F_SIZES(18)=0
      NAME_FSIZES(19)='LIM8'; F_SIZES(19)=0
      NAME_FSIZES(20)='LIM10'; F_SIZES(20)=0
      NAME_FSIZES(21)='LIM11'; F_SIZES(21)=0
      NAME_FSIZES(22)='LIM13'; F_SIZES(22)=0
      NAME_FSIZES(23)='LIM15'; F_SIZES(23)=0
      NAME_FSIZES(24)='LIM16'; F_SIZES(24)=0
      NAME_FSIZES(25)='MAXRECID'; F_SIZES(25)=200
      NAME_FSIZES(26)='PC'; F_SIZES(26)=30
      NAME_FSIZES(27)='PCT'; F_SIZES(27)=30
      NAME_FSIZES(28)='PIR'; F_SIZES(28)=700
      NAME_FSIZES(29)='PD'; F_SIZES(29)=50
      NAME_FSIZES(30)='PAL'; F_SIZES(30)=50
      NAME_FSIZES(31)='MAXFCN'; F_SIZES(31)=1000000
      NAME_FSIZES(32)='MAXIC'; F_SIZES(32)=90
      NAME_FSIZES(33)='PG'; F_SIZES(33)=80
      NAME_FSIZES(34)='NPOPMIXMAX'; F_SIZES(34)=0
      NAME_FSIZES(35)='MAXOMEG'; F_SIZES(35)=3
      NAME_FSIZES(36)='MAXPTHETA'; F_SIZES(36)=6
      NAME_FSIZES(37)='MAXITER'; F_SIZES(37)=20
      NAME_FSIZES(38)='ISAMPLEMAX'; F_SIZES(38)=0
      NAME_FSIZES(39)='DIMTMP'; F_SIZES(39)=0
      NAME_FSIZES(40)='DIMCNS'; F_SIZES(40)=0
      NAME_FSIZES(41)='DIMNEW'; F_SIZES(41)=0
      NAME_FSIZES(42)='PDT'; F_SIZES(42)=9
      NAME_FSIZES(43)='LADD_MAX'; F_SIZES(43)=0
      NAME_FSIZES(44)='MAXSIDL'; F_SIZES(44)=0
      NAME_FSIZES(45)='NTT'; F_SIZES(45)=3
      NAME_FSIZES(46)='NOMEG'; F_SIZES(46)=3
      NAME_FSIZES(47)='NSIGM'; F_SIZES(47)=2
      NAME_FSIZES(48)='PPDT'; F_SIZES(48)=4
      NAME_FSIZES(49)='PAST_SIZE'; F_SIZES(49)=4000
      NAME_FSIZES(50)='MAXNRDS'; F_SIZES(50)=30
      RETURN
      END SUBROUTINE FSIZESR
      SUBROUTINE MUMODEL2(THETA,MU_,ICALL,IDEF,NEWIND,&
      EVTREC,DATREC,IREV,NVNT,INDXS,F,G,H,IRGG,GG,NETAS)
      USE NMPRD4P
      USE SIZES,     ONLY: DPSIZE,ISIZE
      USE PRDIMS,    ONLY: GPRD,HPRD,GERD,HERD,GPKD
      USE NMBAYES_REAL,    ONLY: PRIORINFO
      USE NMBAYES_REAL, ONLY: ADDL_ACTUAL,ADDL_TIMEDIFF,ADDL_TIME
      USE NMPRD_REAL,ONLY: ETA,EPS
      USE NMPRD_INT, ONLY: MSEC=>ISECDER,MFIRST=>IFRSTDER,COMACT,COMSAV,IFIRSTEM
      USE NMPRD_INT, ONLY: MDVRES,ETASXI,NPDE_MODE,NOFIRSTDERCODE
      USE NMPRD_REAL, ONLY: DV_LOQ,CDF_L,DV_LAQ,CDF_LA
      USE NMPRD_INT, ONLY: IQUIT
      USE NMBAYES_REAL, ONLY: LDF
      IMPLICIT REAL(KIND=DPSIZE) (A-Z)
      REAL(KIND=DPSIZE)   :: MU_(*)
      INTEGER NEWIND
      REAL(KIND=DPSIZE) :: EVTREC
      SAVE
      INTEGER(KIND=ISIZE) :: FIRSTEM
      INTEGER(KIND=ISIZE) :: ICALL,IDEF,IREV,NVNT,INDXS,IRGG,NETAS
      DIMENSION :: IDEF(7,*),THETA(*),EVTREC(IREV,*),INDXS(*),GG(IRGG,GPKD+1,*)
      FIRSTEM=IFIRSTEM
      IF (ICALL <= 1) THEN
      CALL ASSOCNMPRD4
      IDEF(   1,0001)=  -9
      IDEF(   1,0002)=  -1
      IDEF(   1,0003)=   0
      IDEF(   1,0004)=   0
      IDEF(   2,0003)=   0
      IDEF(   2,0004)=   0
      IDEF(   3,0002)=   4
      IDEF(   4,0001)=   5
      CALL GETETA(ETA)
      IF (IQUIT == 1) RETURN
      RETURN
      ENDIF
      IF (NEWIND /= 2) THEN
      IF (ICALL == 4) THEN
      CALL SIMETA(ETA)
      ELSE
      CALL GETETA(ETA)
      ENDIF
      IF (IQUIT == 1) RETURN
      ENDIF
 !  level            0
      MU_1=DLOG(THETA(001))
      MU_(001)=MU_1
      MU_2=DLOG(THETA(002))
      MU_(002)=MU_2
      MU_3=DLOG(THETA(003))
      MU_(003)=MU_3
       RETURN
      B000001=DEXP(ETA(001))
      CL=THETA(001)*B000001
      B000002=DEXP(ETA(002))
      V=THETA(002)*B000002
      B000003=DEXP(ETA(003))
      KA=THETA(003)*B000003
      S2=V
      F1=1.D0
      TVCL=THETA(001)
      TVV=THETA(002)
      TVKA=THETA(003)
      IF (FIRSTEM == 1) THEN
!                      A000032 = DERIVATIVE OF CL W.R.T. ETA(001)
      A000032=THETA(001)*B000001
!                      A000036 = DERIVATIVE OF V W.R.T. ETA(002)
      A000036=THETA(002)*B000002
!                      A000040 = DERIVATIVE OF KA W.R.T. ETA(003)
      A000040=THETA(003)*B000003
!                      A000043 = DERIVATIVE OF S2 W.R.T. ETA(002)
      A000043=A000036
      GG(0001,1,1)=CL
      GG(0001,0002,1)=A000032
      GG(0002,1,1)=V
      GG(0002,0003,1)=A000036
      GG(0003,1,1)=KA
      GG(0003,0004,1)=A000040
      GG(0005,1,1)=F1
      GG(0004,1,1)=S2
      GG(0004,0003,1)=A000043
      ELSE
      GG(0001,1,1)=CL
      GG(0002,1,1)=V
      GG(0003,1,1)=KA
      GG(0005,1,1)=F1
      GG(0004,1,1)=S2
      ENDIF
      IF (MSEC == 1) THEN
!                      A000034 = DERIVATIVE OF A000032 W.R.T. ETA(001)
      A000034=THETA(001)*B000001
!                      A000038 = DERIVATIVE OF A000036 W.R.T. ETA(002)
      A000038=THETA(002)*B000002
!                      A000042 = DERIVATIVE OF A000040 W.R.T. ETA(003)
      A000042=THETA(003)*B000003
!                      A000044 = DERIVATIVE OF A000043 W.R.T. ETA(002)
      A000044=A000038
      GG(0001,0002,0002)=A000034
      GG(0002,0003,0003)=A000038
      GG(0003,0004,0004)=A000042
      GG(0004,0003,0003)=A000044
      ENDIF
      RETURN
      END
