; AUC WITH DELAY EXAMPLE (MOVING AVERAGE OF AUC)
; Example aucdelay2.ctl
; Compare with aucdelay1.ctl,
; the simple absorption model example developed by Bob
; Bauer and Alison Boeckmann for illustration purposes. compartments
; Compartments 1, 2, and 3 are the "real time" depot, central, auc.
; The duplicate dose into CMT=4 is ignored.
; Time delay TDY is used to model MTIME(i) rather than ALAG.
; UNIX commands to create aucdelay2 from  aucdelay3.ctl are:
; nmtemplate aucdelay3.ctl temp1 maxrecs=16
; doexpand  temp1  temp2
; temp2 is now essentially aucdelay2.ctl, with minor changes
;

$PROB TEST AUC DELAY USING ONE SET OF COMPARTMENTS AFTER DOE REPETITION
$INPUT ID TIME AMT CMT DV
$DATA DELAYDATA IGNORE=@ IGNORE=(CMT==4)
$WARNINGS DATA=NONE ; supress warnings about missing DV values
$ABBR DECLARE REAL TIMES(1000)
$ABBR DECLARE INTEGER K, INTEGER KREC
$SUBR ADVAN6 TOL=5
$MODEL
COMP=(DEPOT) COMP=(CENTRAL) COMP=(AUC)

$INFN
IF (ICALL.EQ.1) THEN
K=0
DOWHILE(DATA) ; SAVE ALL VALUES OF TIME
K=K+1
TIMES(K)=TIME
ENDDO
ENDIF

$OMEGA 1 1 1 ; MUST PRECEDE $PK WHEN A(I) USED IN $PK

$PK
"FIRST
" USE CMNM2_INT ,ONLY : IRECIDX
; IRECIDX gives the position in TIMES of the start of the current individual record.
; LIREC gives the number of records in the current individual record
; and is needed if different subjects have different amounts of data,
; in which case maxrecs will be too large for some individuals.

MTDIFF=1 ;  tell PREDPP that MTIME values will change.
TDY=THETA(1)*EXP(ETA(1))

KREC=IRECIDX+1
IF (NEWIND.LE.1.AND.1<=LIREC) THEN
MTIME(1)=TIMES(KREC)-TDY  ; SET NEW VALUE OF MTIME (TDY MAY DEPEND ON ETA)
SAVEA1=0                  ; ERASE OLD VALUE FROM PREVIOUS PASS
ELSE
MTIME(1)=MTIME(1)
SAVEA1=SAVEA1
ENDIF
KREC=IRECIDX+2
IF (NEWIND.LE.1.AND.2<=LIREC) THEN
MTIME(2)=TIMES(KREC)-TDY  ; SET NEW VALUE OF MTIME (TDY MAY DEPEND ON ETA)
SAVEA2=0                  ; ERASE OLD VALUE FROM PREVIOUS PASS
ELSE
MTIME(2)=MTIME(2)
SAVEA2=SAVEA2
ENDIF
KREC=IRECIDX+3
IF (NEWIND.LE.1.AND.3<=LIREC) THEN
MTIME(3)=TIMES(KREC)-TDY  ; SET NEW VALUE OF MTIME (TDY MAY DEPEND ON ETA)
SAVEA3=0                  ; ERASE OLD VALUE FROM PREVIOUS PASS
ELSE
MTIME(3)=MTIME(3)
SAVEA3=SAVEA3
ENDIF
KREC=IRECIDX+4
IF (NEWIND.LE.1.AND.4<=LIREC) THEN
MTIME(4)=TIMES(KREC)-TDY  ; SET NEW VALUE OF MTIME (TDY MAY DEPEND ON ETA)
SAVEA4=0                  ; ERASE OLD VALUE FROM PREVIOUS PASS
ELSE
MTIME(4)=MTIME(4)
SAVEA4=SAVEA4
ENDIF
KREC=IRECIDX+5
IF (NEWIND.LE.1.AND.5<=LIREC) THEN
MTIME(5)=TIMES(KREC)-TDY  ; SET NEW VALUE OF MTIME (TDY MAY DEPEND ON ETA)
SAVEA5=0                  ; ERASE OLD VALUE FROM PREVIOUS PASS
ELSE
MTIME(5)=MTIME(5)
SAVEA5=SAVEA5
ENDIF
KREC=IRECIDX+6
IF (NEWIND.LE.1.AND.6<=LIREC) THEN
MTIME(6)=TIMES(KREC)-TDY  ; SET NEW VALUE OF MTIME (TDY MAY DEPEND ON ETA)
SAVEA6=0                  ; ERASE OLD VALUE FROM PREVIOUS PASS
ELSE
MTIME(6)=MTIME(6)
SAVEA6=SAVEA6
ENDIF
KREC=IRECIDX+7
IF (NEWIND.LE.1.AND.7<=LIREC) THEN
MTIME(7)=TIMES(KREC)-TDY  ; SET NEW VALUE OF MTIME (TDY MAY DEPEND ON ETA)
SAVEA7=0                  ; ERASE OLD VALUE FROM PREVIOUS PASS
ELSE
MTIME(7)=MTIME(7)
SAVEA7=SAVEA7
ENDIF
KREC=IRECIDX+8
IF (NEWIND.LE.1.AND.8<=LIREC) THEN
MTIME(8)=TIMES(KREC)-TDY  ; SET NEW VALUE OF MTIME (TDY MAY DEPEND ON ETA)
SAVEA8=0                  ; ERASE OLD VALUE FROM PREVIOUS PASS
ELSE
MTIME(8)=MTIME(8)
SAVEA8=SAVEA8
ENDIF
KREC=IRECIDX+9
IF (NEWIND.LE.1.AND.9<=LIREC) THEN
MTIME(9)=TIMES(KREC)-TDY  ; SET NEW VALUE OF MTIME (TDY MAY DEPEND ON ETA)
SAVEA9=0                  ; ERASE OLD VALUE FROM PREVIOUS PASS
ELSE
MTIME(9)=MTIME(9)
SAVEA9=SAVEA9
ENDIF
KREC=IRECIDX+10
IF (NEWIND.LE.1.AND.10<=LIREC) THEN
MTIME(10)=TIMES(KREC)-TDY  ; SET NEW VALUE OF MTIME (TDY MAY DEPEND ON ETA)
SAVEA10=0                  ; ERASE OLD VALUE FROM PREVIOUS PASS
ELSE
MTIME(10)=MTIME(10)
SAVEA10=SAVEA10
ENDIF
KREC=IRECIDX+11
IF (NEWIND.LE.1.AND.11<=LIREC) THEN
MTIME(11)=TIMES(KREC)-TDY  ; SET NEW VALUE OF MTIME (TDY MAY DEPEND ON ETA)
SAVEA11=0                  ; ERASE OLD VALUE FROM PREVIOUS PASS
ELSE
MTIME(11)=MTIME(11)
SAVEA11=SAVEA11
ENDIF
KREC=IRECIDX+12
IF (NEWIND.LE.1.AND.12<=LIREC) THEN
MTIME(12)=TIMES(KREC)-TDY  ; SET NEW VALUE OF MTIME (TDY MAY DEPEND ON ETA)
SAVEA12=0                  ; ERASE OLD VALUE FROM PREVIOUS PASS
ELSE
MTIME(12)=MTIME(12)
SAVEA12=SAVEA12
ENDIF
KREC=IRECIDX+13
IF (NEWIND.LE.1.AND.13<=LIREC) THEN
MTIME(13)=TIMES(KREC)-TDY  ; SET NEW VALUE OF MTIME (TDY MAY DEPEND ON ETA)
SAVEA13=0                  ; ERASE OLD VALUE FROM PREVIOUS PASS
ELSE
MTIME(13)=MTIME(13)
SAVEA13=SAVEA13
ENDIF
KREC=IRECIDX+14
IF (NEWIND.LE.1.AND.14<=LIREC) THEN
MTIME(14)=TIMES(KREC)-TDY  ; SET NEW VALUE OF MTIME (TDY MAY DEPEND ON ETA)
SAVEA14=0                  ; ERASE OLD VALUE FROM PREVIOUS PASS
ELSE
MTIME(14)=MTIME(14)
SAVEA14=SAVEA14
ENDIF
KREC=IRECIDX+15
IF (NEWIND.LE.1.AND.15<=LIREC) THEN
MTIME(15)=TIMES(KREC)-TDY  ; SET NEW VALUE OF MTIME (TDY MAY DEPEND ON ETA)
SAVEA15=0                  ; ERASE OLD VALUE FROM PREVIOUS PASS
ELSE
MTIME(15)=MTIME(15)
SAVEA15=SAVEA15
ENDIF
KREC=IRECIDX+16
IF (NEWIND.LE.1.AND.16<=LIREC) THEN
MTIME(16)=TIMES(KREC)-TDY  ; SET NEW VALUE OF MTIME (TDY MAY DEPEND ON ETA)
SAVEA16=0                  ; ERASE OLD VALUE FROM PREVIOUS PASS
ELSE
MTIME(16)=MTIME(16)
SAVEA16=SAVEA16
ENDIF

IF (1<=LIREC.AND.MTIME(1)==TSTATE) THEN
MTIME(1)=0 ; MAKES SURE THAT ONLY THE FIRST A(3) VALUE AT TSTATE IS SAVED
SAVEA1=A(3)
ELSE
MTIME(1)=MTIME(1)
SAVEA1=SAVEA1
ENDIF
IF (2<=LIREC.AND.MTIME(2)==TSTATE) THEN
MTIME(2)=0 ; MAKES SURE THAT ONLY THE FIRST A(3) VALUE AT TSTATE IS SAVED
SAVEA2=A(3)
ELSE
MTIME(2)=MTIME(2)
SAVEA2=SAVEA2
ENDIF
IF (3<=LIREC.AND.MTIME(3)==TSTATE) THEN
MTIME(3)=0 ; MAKES SURE THAT ONLY THE FIRST A(3) VALUE AT TSTATE IS SAVED
SAVEA3=A(3)
ELSE
MTIME(3)=MTIME(3)
SAVEA3=SAVEA3
ENDIF
IF (4<=LIREC.AND.MTIME(4)==TSTATE) THEN
MTIME(4)=0 ; MAKES SURE THAT ONLY THE FIRST A(3) VALUE AT TSTATE IS SAVED
SAVEA4=A(3)
ELSE
MTIME(4)=MTIME(4)
SAVEA4=SAVEA4
ENDIF
IF (5<=LIREC.AND.MTIME(5)==TSTATE) THEN
MTIME(5)=0 ; MAKES SURE THAT ONLY THE FIRST A(3) VALUE AT TSTATE IS SAVED
SAVEA5=A(3)
ELSE
MTIME(5)=MTIME(5)
SAVEA5=SAVEA5
ENDIF
IF (6<=LIREC.AND.MTIME(6)==TSTATE) THEN
MTIME(6)=0 ; MAKES SURE THAT ONLY THE FIRST A(3) VALUE AT TSTATE IS SAVED
SAVEA6=A(3)
ELSE
MTIME(6)=MTIME(6)
SAVEA6=SAVEA6
ENDIF
IF (7<=LIREC.AND.MTIME(7)==TSTATE) THEN
MTIME(7)=0 ; MAKES SURE THAT ONLY THE FIRST A(3) VALUE AT TSTATE IS SAVED
SAVEA7=A(3)
ELSE
MTIME(7)=MTIME(7)
SAVEA7=SAVEA7
ENDIF
IF (8<=LIREC.AND.MTIME(8)==TSTATE) THEN
MTIME(8)=0 ; MAKES SURE THAT ONLY THE FIRST A(3) VALUE AT TSTATE IS SAVED
SAVEA8=A(3)
ELSE
MTIME(8)=MTIME(8)
SAVEA8=SAVEA8
ENDIF
IF (9<=LIREC.AND.MTIME(9)==TSTATE) THEN
MTIME(9)=0 ; MAKES SURE THAT ONLY THE FIRST A(3) VALUE AT TSTATE IS SAVED
SAVEA9=A(3)
ELSE
MTIME(9)=MTIME(9)
SAVEA9=SAVEA9
ENDIF
IF (10<=LIREC.AND.MTIME(10)==TSTATE) THEN
MTIME(10)=0 ; MAKES SURE THAT ONLY THE FIRST A(3) VALUE AT TSTATE IS SAVED
SAVEA10=A(3)
ELSE
MTIME(10)=MTIME(10)
SAVEA10=SAVEA10
ENDIF
IF (11<=LIREC.AND.MTIME(11)==TSTATE) THEN
MTIME(11)=0 ; MAKES SURE THAT ONLY THE FIRST A(3) VALUE AT TSTATE IS SAVED
SAVEA11=A(3)
ELSE
MTIME(11)=MTIME(11)
SAVEA11=SAVEA11
ENDIF
IF (12<=LIREC.AND.MTIME(12)==TSTATE) THEN
MTIME(12)=0 ; MAKES SURE THAT ONLY THE FIRST A(3) VALUE AT TSTATE IS SAVED
SAVEA12=A(3)
ELSE
MTIME(12)=MTIME(12)
SAVEA12=SAVEA12
ENDIF
IF (13<=LIREC.AND.MTIME(13)==TSTATE) THEN
MTIME(13)=0 ; MAKES SURE THAT ONLY THE FIRST A(3) VALUE AT TSTATE IS SAVED
SAVEA13=A(3)
ELSE
MTIME(13)=MTIME(13)
SAVEA13=SAVEA13
ENDIF
IF (14<=LIREC.AND.MTIME(14)==TSTATE) THEN
MTIME(14)=0 ; MAKES SURE THAT ONLY THE FIRST A(3) VALUE AT TSTATE IS SAVED
SAVEA14=A(3)
ELSE
MTIME(14)=MTIME(14)
SAVEA14=SAVEA14
ENDIF
IF (15<=LIREC.AND.MTIME(15)==TSTATE) THEN
MTIME(15)=0 ; MAKES SURE THAT ONLY THE FIRST A(3) VALUE AT TSTATE IS SAVED
SAVEA15=A(3)
ELSE
MTIME(15)=MTIME(15)
SAVEA15=SAVEA15
ENDIF
IF (16<=LIREC.AND.MTIME(16)==TSTATE) THEN
MTIME(16)=0 ; MAKES SURE THAT ONLY THE FIRST A(3) VALUE AT TSTATE IS SAVED
SAVEA16=A(3)
ELSE
MTIME(16)=MTIME(16)
SAVEA16=SAVEA16
ENDIF


KA=THETA(2)*EXP(ETA(2))
KE=THETA(3)*EXP(ETA(3))

$DES
DADT(1)=-KA*A(1)
DADT(2)= KA*A(1)-KE*A(2) ; C(T)
DADT(3)= A(2)  ; AUC(T)

$ERROR
"FIRST
" USE CMNM2_INT ,ONLY : IRECIDX
KREC=IRECIDX+1
IF (1<=LIREC.AND.TIME==TIMES(KREC)) SA=SAVEA1
KREC=IRECIDX+2
IF (2<=LIREC.AND.TIME==TIMES(KREC)) SA=SAVEA2
KREC=IRECIDX+3
IF (3<=LIREC.AND.TIME==TIMES(KREC)) SA=SAVEA3
KREC=IRECIDX+4
IF (4<=LIREC.AND.TIME==TIMES(KREC)) SA=SAVEA4
KREC=IRECIDX+5
IF (5<=LIREC.AND.TIME==TIMES(KREC)) SA=SAVEA5
KREC=IRECIDX+6
IF (6<=LIREC.AND.TIME==TIMES(KREC)) SA=SAVEA6
KREC=IRECIDX+7
IF (7<=LIREC.AND.TIME==TIMES(KREC)) SA=SAVEA7
KREC=IRECIDX+8
IF (8<=LIREC.AND.TIME==TIMES(KREC)) SA=SAVEA8
KREC=IRECIDX+9
IF (9<=LIREC.AND.TIME==TIMES(KREC)) SA=SAVEA9
KREC=IRECIDX+10
IF (10<=LIREC.AND.TIME==TIMES(KREC)) SA=SAVEA10
KREC=IRECIDX+11
IF (11<=LIREC.AND.TIME==TIMES(KREC)) SA=SAVEA11
KREC=IRECIDX+12
IF (12<=LIREC.AND.TIME==TIMES(KREC)) SA=SAVEA12
KREC=IRECIDX+13
IF (13<=LIREC.AND.TIME==TIMES(KREC)) SA=SAVEA13
KREC=IRECIDX+14
IF (14<=LIREC.AND.TIME==TIMES(KREC)) SA=SAVEA14
KREC=IRECIDX+15
IF (15<=LIREC.AND.TIME==TIMES(KREC)) SA=SAVEA15
KREC=IRECIDX+16
IF (16<=LIREC.AND.TIME==TIMES(KREC)) SA=SAVEA16

A1=A(1)
A2=A(2)
A3=A(3)

DAUC=A(3)-SA

Y=F+DAUC+EPS(1)
$THETA 3
$THETA 1 2
$SIGMA 1
$TABLE ID TIME A1 A2 A3 DAUC NOPRINT FILE=aucdelay2.tbl
FORMAT=SF8.3
